Imports System.Data
Imports System.Data.SqlClient
Imports System.Web.UI.WebControls

Partial Class Workstations_Frames_RO
    Inherits System.Web.UI.Page


    Public Sub MesgBox(ByVal sMessage As String)
        Dim msg As String
        msg = "<script language='javascript'>"
        msg += "alert('" & sMessage & "');"
        msg += "<" & "/script>"
        Response.Write(msg)
    End Sub

    Protected Sub Timer1_Tick(ByVal sender As Object, ByVal e As EventArgs)

        gvFrames.DataBind()

    End Sub

    Protected Sub gvFrames_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles gvFrames.RowCommand
        If e.CommandName = "gotonotes" Then 'handles when the notes button is clicked
            Dim ID As String = e.CommandArgument 'get the row that is clicked
            Dim Selected As Integer = gvFrames.Rows(ID).Cells(0).Text 'find the prod # in that row to use in the update command
            Dim workstation As String = "Frames" 'to pass in the workstation that makes the note.
            'Response.Redirect("../BoatNotes.aspx?ws=" & workstation & "&ProdNo=" & Selected)
            Dim url2 As String = "../BoatNotes.aspx?ws=" & workstation & "&ProdNo=" & Selected
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "newWindow", "window.open('" + url2 + "','_blank','status=1,toolbar=0,menubar=0,location=1,scrollbars=1,resizable=1,width=840,height=800');", True)

            'Response.Write("<script language='javascript'> {popUpObj=window.open ('" & url2 & "' ,'mywindow','menubar=0,resizable=1,width=840,height=800,toolbars=0');popUpObj.focus()}</script>")
            'Response.Redirect("../BoatNotes.aspx?&ProdNo=" & Selected)
        End If

        If e.CommandName = "gotostatus" Then 'handles when the offline button is clicked
            Dim ID As String = e.CommandArgument 'get the row that is clicked
            Dim Selected As Integer = gvFrames.Rows(ID).Cells(0).Text 'find the prod # in that row to use in the update command
            Dim workstation As String = "Frames" 'to pass in the workstation that makes the note.
            Dim url As String = "../BoatStatus.aspx?ws=" & workstation & "&ProdNo=" & Selected
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "newWindow", "window.open('" + url + "','_blank','status=1,toolbar=0,menubar=0,location=1,scrollbars=1,resizable=1,width=840,height=800');", True)
            'Response.Write("<script language='javascript'> {popUpObj=window.open ('" & url & "' ,'mywindow','menubar=0,resizable=1,width=840,height=600,toolbars=0');popUpObj.focus()}</script>")
        End If

        If e.CommandName = "gotoorderdetails" Then 'handles when the notes button is clicked
            Dim SONo As String = e.CommandArgument 'get the row that is clicked
            Dim url As String = "../OrderDetails.aspx?SONo=" & SONo
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "newWindow", "window.open('" + url + "','_blank','status=1,toolbar=0,menubar=0,location=1,scrollbars=1,resizable=1,width=840,height=800');", True)
            'Response.Write("<script language='javascript'> {popUpObj=window.open ('" & url & "' ,'mywindow','menubar=0,resizable=0,width=900,height=900,toolbars=0');popUpObj.focus()}</script>")
        End If

        'This code is for the update button
        If e.CommandName = "gotoupdate" Then
            Dim Key As String = e.CommandArgument 'get the row that is clicked
            Dim SelectedProdNo As Integer = gvFrames.Rows(Key).Cells(0).Text 'find the prod # in that row to use in the update command
            Dim img As Image = CType(gvFrames.Rows(Key).FindControl("btnUpdateFrames"), Image)
            Dim framevalue = img.ImageUrl
            framevalue = Mid(framevalue, 32, 1) 'get the value of FramesInstalledStatus from the imageurl. Get 1 character after 32.

            Dim NextWorkstationHasDate As Int16


            Dim conn As New SqlConnection()
            Dim connstr As String = ConfigurationManager.ConnectionStrings("bml_dataConnectionString").ConnectionString

            Dim cmd As New SqlCommand
            Dim cmd2 As New SqlCommand
            Dim cmd3 As New SqlCommand
            Dim cmd4 As New SqlCommand
            Dim cmd5 As New SqlCommand
            Dim cmd6 As New SqlCommand
            Dim cmd7 As New SqlCommand
            Dim cmd8 As New SqlCommand
            Dim cmd9 As New SqlCommand

            Dim TodaysDate As Date = Date.Now
            Dim ThisDay As Date = TodaysDate.Date
            Dim recordcount As Int16 = 0
            Dim recordcountS As Int16 = 0
            Dim southshrinkcount As Int16 = 0
            Dim mainreadycount As Int16 = 0
            Dim southreadycount As Int16 = 0
            Dim coverstatus As Int16 = 0

            conn.ConnectionString = connstr

            cmd.CommandType = CommandType.Text
            'Todo - if the value is 2 prompt to undo the values and then undo them.

            'to get the count of the prod #'s completed that day as it changes
            cmd.CommandText = "UPDATE BML_POPREPORTING_GREENLIGHTS SET FramesInstalledStatus = '2', FloorsInstalledStatus = '1', FramesInstalled = '" & TodaysDate & "' where ProdNo =  '" & SelectedProdNo & "'"
            cmd2.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 2 and BuildLoc = 'M' and Convert(date,FramesInstalled) ='" & ThisDay & "'"
            'Determine if the next workstation already has a done date set.
            cmd3.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FloorsInstalled is not NULL and ProdNo = '" & SelectedProdNo & "'"
            'reverse done
            cmd4.CommandText = "UPDATE BML_POPREPORTING_GREENLIGHTS SET FramesInstalledStatus = '1', FloorsInstalledStatus = '0', FramesInstalled = NULL where ProdNo =  '" & SelectedProdNo & "' and FloorsInstalled is NULL"
            'for the email to Tumacs
            cmd5.CommandText = "Select CoversStatus from BML_POPREPORTING_GREENLIGHTS where ProdNo = '" & SelectedProdNo & "'"
            cmd6.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 2 and BuildLoc = 'S' and Convert(date,FramesInstalled) ='" & ThisDay & "'"
            cmd7.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where BuildLoc = S and ShrinkwrapStatus = 2 and Convert(date,Shrinkwrap) ='" & ThisDay & "'"
            cmd8.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 1 and BuildLoc = 'M'"
            cmd9.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 1 and BuildLoc = 'S'"

            cmd.Connection = conn
            cmd2.Connection = conn
            cmd3.Connection = conn
            cmd4.Connection = conn
            cmd5.Connection = conn
            cmd6.Connection = conn
            cmd7.Connection = conn
            cmd8.Connection = conn
            cmd9.Connection = conn


            conn.Open()
           

            If framevalue <= 1 Then
                cmd.ExecuteNonQuery()
            Else

                NextWorkstationHasDate = Convert.ToInt16(cmd3.ExecuteScalar())
                If NextWorkstationHasDate = 1 Then
                    MesgBox("You cannot undo this action because the next station has already completed there part of this boat. If you need help, please contact a supervisor")
                Else
                    cmd4.ExecuteNonQuery() 'Allow reversal if next workstation hasn't started.
                End If
            End If

            recordcount = Convert.ToInt16(cmd2.ExecuteScalar())
            recordcountS = Convert.ToInt16(cmd6.ExecuteScalar())
            coverstatus = (cmd5.ExecuteScalar())

            lblBoatsStarted.Text = recordcount
            lblBoatsStartedS.Text = recordcountS

            southshrinkcount = Convert.ToInt16(cmd7.ExecuteScalar())
            lblSouthShrink.Text = southshrinkcount


            mainreadycount = Convert.ToInt16(cmd6.ExecuteScalar)
            southreadycount = Convert.ToInt16(cmd7.ExecuteScalar)
            lblMainReadyToStart.Text = mainreadycount
            lblSouthReadyToStart.Text = southreadycount


            gvFrames.DataBind()
            conn.Close()

            If coverstatus = 1 Then
                Dim SmtpServer As New Net.Mail.SmtpClient
                Dim mail As New Net.Mail.MailMessage
                SmtpServer.Host = "192.168.1.5"
                SmtpServer.UseDefaultCredentials = False
                SmtpServer.Credentials = New System.Net.NetworkCredential("krimbaugh@benningtonmarine.com", "keRi0213")

                mail.From = New Net.Mail.MailAddress("krimbaugh@benningtonmarine.com")
                mail.To.Add("krimbaugh@benningtonmarine.com")
                'mail.To.Add("vknight@benningtonmarine.com")
                mail.Subject = "Bennington Cover to Be Patterned - Prod # " & SelectedProdNo & ""
                mail.Body = "Bennington Production #" & SelectedProdNo & " Has a Cover and/or Carpet that needs Patterned. The Boat just came online. You will receive another email when the boat is ready to to patterned. "
                SmtpServer.Send(mail)
            End If

        End If

    End Sub

    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        Dim conn As New SqlConnection()
        Dim connstr As String = ConfigurationManager.ConnectionStrings("bml_dataConnectionString").ConnectionString

        Dim cmd2 As New SqlCommand
        Dim cmd3 As New SqlCommand
        Dim cmd4 As New SqlCommand
        Dim cmd5 As New SqlCommand
        Dim cmd6 As New SqlCommand
        Dim cmd7 As New SqlCommand


        Dim TodaysDate As Date = Date.Now
        Dim ThisDay As Date = TodaysDate.Date
        Dim recordcount As Int16 = 0
        Dim recordcountS As Int16 = 0
        Dim DaystoShow As String
        Dim framesreadytostart As Int16
        Dim southshrinkcount As Int16 = 0
        Dim mainreadycount As Int16
        Dim southreadycount As Int16

        If ddlDaysInAdvance.Items.Count = 0 Then  'stop it from repopulating everytime the grid rebinds
            DaystoShow = ThisDay.AddDays(5).ToString("yyyy-MM-dd")
            ddlDaysInAdvance.Items.Add(New ListItem("3 Days", DaystoShow))
            DaystoShow = ThisDay.AddDays(7).ToString("yyyy-MM-dd")
            ddlDaysInAdvance.Items.Add(New ListItem("5 Days", DaystoShow))
            DaystoShow = ThisDay.AddDays(12).ToString("yyyy-MM-dd")
            ddlDaysInAdvance.Items.Add(New ListItem("10 Days", DaystoShow))
            DaystoShow = ThisDay.AddDays(17).ToString("yyyy-MM-dd")
            ddlDaysInAdvance.Items.Add(New ListItem("15 Days", DaystoShow))
            DaystoShow = ThisDay.AddDays(22).ToString("yyyy-MM-dd")
            ddlDaysInAdvance.Items.Add(New ListItem("20 Days", DaystoShow))
        End If

        'MesgBox(DaystoShow)
        conn.ConnectionString = connstr
        cmd2.CommandType = CommandType.Text
        cmd2.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 2 and BuildLoc = 'M' and Convert(date,FramesInstalled) ='" & ThisDay & "'"
        'to get the count of the prod #'s completed that day
        cmd3.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 1"
        cmd4.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 2 and BuildLoc = 'S' and Convert(date,FramesInstalled) ='" & ThisDay & "'"
        cmd5.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where BuildLoc = S and ShrinkwrapStatus = 2 and Convert(date,Shrinkwrap) ='" & ThisDay & "'"


        cmd6.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 1 and BuildLoc = 'M'"
        cmd7.CommandText = "Select Count (*) FROM BML_POPREPORTING_GREENLIGHTS where FramesInstalledStatus = 1 and BuildLoc = 'S'"


        cmd2.Connection = conn
        cmd3.Connection = conn
        cmd4.Connection = conn
        cmd5.Connection = conn
        cmd6.Connection = conn
        cmd7.Connection = conn

        conn.Open()
        'MesgBox(rbList.SelectedValue)
        'MesgBox(Key)
        'MesgBox(SelectedProdNo)

        recordcount = Convert.ToInt16(cmd2.ExecuteScalar())
        lblBoatsStarted.Text = recordcount

        recordcountS = Convert.ToInt16(cmd2.ExecuteScalar())
        lblBoatsStartedS.Text = recordcountS

        framesreadytostart = Convert.ToInt16(cmd3.ExecuteScalar)
        lblReadyToStart.Text = framesreadytostart


        southshrinkcount = Convert.ToInt16(cmd5.ExecuteScalar())
        lblSouthShrink.Text = southshrinkcount
        'MesgBox(recordcount)

        mainreadycount = Convert.ToInt16(cmd6.ExecuteScalar)
        southreadycount = Convert.ToInt16(cmd7.ExecuteScalar)
        lblMainReadyToStart.Text = mainreadycount
        lblSouthReadyToStart.Text = southreadycount

        conn.Close()
    End Sub

    Protected Sub btnRefresh_Click(sender As Object, e As EventArgs) Handles btnRefresh.Click
        gvFrames.DataBind()
    End Sub

    Protected Sub gvFrames_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles gvFrames.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then

            Dim s As SqlDataSource = CType(e.Row.FindControl("sdsPopReportingFabOptions"), SqlDataSource)
            Dim u As SqlDataSource = CType(e.Row.FindControl("sdsRailsData"), SqlDataSource)



            Try 'use the selected prod # to get the green light values for the subgridview.  Used so that every greenlight section has headers.
                s.SelectParameters(0).DefaultValue = e.Row.Cells(0).Text                '
                u.SelectParameters(0).DefaultValue = e.Row.Cells(0).Text

            Catch

            End Try

            Try
                If (e.Row.DataItem("BuildLoc") = "S") Then
                    e.Row.BackColor = Drawing.Color.LightGray
                End If
            Catch ex As Exception

            End Try

            e.Row.Cells(0).ToolTip = "Prod #"
            e.Row.Cells(1).ToolTip = "F"
            e.Row.Cells(2).ToolTip = "FG"
            e.Row.Cells(3).ToolTip = "C"
            e.Row.Cells(4).ToolTip = "R"
            e.Row.Cells(5).ToolTip = "T"
            e.Row.Cells(6).ToolTip = "CT"
            e.Row.Cells(7).ToolTip = "G|H"
            'e.Row.Cells(8).ToolTip = "SB"
            'e.Row.Cells(9).ToolTip = "Rails Here"


        End If
    End Sub
End Class
